{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","siteCount","setSiteCount","useState","staffPerSite","setStaffPerSite","totalManpower","setTotalManpower","React","createElement","style","padding","textAlign","marginBottom","type","value","onChange","e","Number","target","placeholder","onClick","calculateManpower","margin","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JAwCeA,MAtCf,WACE,MAAOC,EAAWC,GAAgBC,mBAAS,IACpCC,EAAcC,GAAmBF,mBAAS,IAC1CG,EAAeC,GAAoBJ,mBAAS,GAMnD,OACEK,IAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,UAAW,WACxCJ,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,OAAKC,MAAO,CAAEG,aAAc,SAC1BL,IAAAC,cAAA,aAAO,qBACPD,IAAAC,cAAA,SACEK,KAAK,SACLC,MAAOd,EACPe,SAAWC,GAAMf,EAAagB,OAAOD,EAAEE,OAAOJ,QAC9CK,YAAY,2BAGhBZ,IAAAC,cAAA,OAAKC,MAAO,CAAEG,aAAc,SAC1BL,IAAAC,cAAA,aAAO,oBACPD,IAAAC,cAAA,SACEK,KAAK,SACLC,MAAOX,EACPY,SAAWC,GAAMZ,EAAgBa,OAAOD,EAAEE,OAAOJ,QACjDK,YAAY,0BAGhBZ,IAAAC,cAAA,UAAQY,QAzBcC,KACxBf,EAAiBN,EAAYG,IAwBSM,MAAO,CAAEC,QAAS,OAAQY,OAAQ,SAAU,4BAG/EjB,EAAgB,GAAKE,IAAAC,cAAA,UAAI,4BAA0BH,KCvB3CkB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAV,EAAA,GAAAW,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACT,EAAG,QAORwB","file":"static/js/main.8db10ae2.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [siteCount, setSiteCount] = useState(0);\n  const [staffPerSite, setStaffPerSite] = useState(0);\n  const [totalManpower, setTotalManpower] = useState(0);\n\n  const calculateManpower = () => {\n    setTotalManpower(siteCount * staffPerSite);\n  };\n\n  return (\n    <div style={{ padding: '20px', textAlign: 'center' }}>\n      <h1>Manpower Calculator</h1>\n      <div style={{ marginBottom: '10px' }}>\n        <label>Number of Sites: </label>\n        <input\n          type=\"number\"\n          value={siteCount}\n          onChange={(e) => setSiteCount(Number(e.target.value))}\n          placeholder=\"Enter number of sites\"\n        />\n      </div>\n      <div style={{ marginBottom: '10px' }}>\n        <label>Staff Per Site: </label>\n        <input\n          type=\"number\"\n          value={staffPerSite}\n          onChange={(e) => setStaffPerSite(Number(e.target.value))}\n          placeholder=\"Enter staff per site\"\n        />\n      </div>\n      <button onClick={calculateManpower} style={{ padding: '10px', margin: '10px' }}>\n        Calculate Total Manpower\n      </button>\n      {totalManpower > 0 && <h2>Total Manpower Required: {totalManpower}</h2>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}